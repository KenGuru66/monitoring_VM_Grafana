═══════════════════════════════════════════════════════════════
     HUAWEI PERFORMANCE PARSER - КРАТКАЯ ИНСТРУКЦИЯ
═══════════════════════════════════════════════════════════════

🚀 БЫСТРЫЙ СТАРТ:
═══════════════════════════════════════════════════════════════

# Минимальная команда (обработать ВСЕ файлы):
python3 Huawei_perf_parser_v0.2_parallel.py -i "logs/your_file.zip" -o output

# Команда в фоне с логами:
python3 Huawei_perf_parser_v0.2_parallel.py -i "logs/your_file.zip" -o output 2>&1 | tee parser.log &

# Следить за прогрессом:
tail -f parser.log

═══════════════════════════════════════════════════════════════

📊 ПРОВЕРКА РЕЗУЛЬТАТА:
═══════════════════════════════════════════════════════════════

# Количество строк в CSV:
wc -l output/*.csv

# Размер файлов:
ls -lh output/

# Проверить процессы:
ps aux | grep Huawei_perf_parser

# Загрузка CPU:
htop

═══════════════════════════════════════════════════════════════

⚙️ ПАРАМЕТРЫ (ОПЦИОНАЛЬНЫЕ):
═══════════════════════════════════════════════════════════════

-p PREFIX      Фильтр по префиксу (без этого - обрабатываются ВСЕ файлы)
-w NUMBER      Количество CPU ядер (по умолчанию: все-1)
-d             Удалять исходные файлы после обработки

Примеры:
--------
# Только 4 ядра:
python3 Huawei_perf_parser_v0.2_parallel.py -i "logs/file.zip" -o output -w 4

# С фильтром по префиксу:
python3 Huawei_perf_parser_v0.2_parallel.py -i "logs/file.zip" -o output -p "PerfData_Dorado"

# Удалять исходные файлы:
python3 Huawei_perf_parser_v0.2_parallel.py -i "logs/file.zip" -o output -d

═══════════════════════════════════════════════════════════════

📝 ПОЛНАЯ ДОКУМЕНТАЦИЯ:
═══════════════════════════════════════════════════════════════

QUICK_START.md               - Быстрый старт с примерами
PARALLEL_VERSION_README.md   - Подробная документация

